syntax = "proto3";

package courses;

option go_package = "./internal/api";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service Courses {
    rpc Create(CreateRequest) returns (CreateResponse) {}
    rpc Get(GetRequest) returns (GetResponse) {}
    rpc Update(UpdateRequest) returns (google.protobuf.Empty) {}
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {}
    rpc List(ListRequest) returns (ListResponse) {}
    rpc JoinCourse(JoinCourseRequest) returns (google.protobuf.Empty) {}
    rpc SetProgress(SetProgressRequest) returns (google.protobuf.Empty) {}
    rpc SetStatus(SetStatusRequest) returns (google.protobuf.Empty) {}
    rpc GetUserCourse(GetUserCourseRequest) returns (UserCourseResponse) {}
    rpc ListUserCourse(ListUserCourseRequest) returns (ListUserCourseResponse) {}
}

message CreateRequest {
    string title = 1;
    string description = 2;
}

message CreateResponse {
    string id = 1;
}

message GetRequest {
    string id = 1;
}

message GetResponse {
    string id = 1;
    string title = 2;
    string description = 3;
    google.protobuf.Timestamp created_at = 4;
    int32 is_deleted = 5;
}

message DeleteRequest {
    string id = 1;
}

message UpdateRequest {
    string id = 1;
    string title = 2;
    string description = 3;
}

message ListRequest {
    int32 limit = 1;
    int32 offset = 2;
    bool show_deleted = 3;
}

message ListResponse {
    repeated GetResponse courses = 1;
    int32 total = 2;
}

message UserCourseResponse {
    string user_id = 1;
    string course_id = 2;
    google.protobuf.Timestamp start_date = 3;
    google.protobuf.Timestamp finish_date = 4;
    uint32 percent_finished = 5;
    string status = 6;
    google.protobuf.Timestamp created_at = 7;
}

message JoinCourseRequest {
    string user_id = 1;
    string course_id = 2;
}

message GetUserCourseRequest {
    string user_id = 1;
    string course_id = 2;
}

message SetProgressRequest {
    string user_id = 1;
    string course_id = 2;
    uint32 percent_finished = 3;
}

message SetStatusRequest {
    string user_id = 1;
    string course_id = 2;
    string status = 3;
}

message ListUserCourseRequest {
    int32 limit = 1;
    int32 offset = 2;
    bool show_deleted = 3;
    string user_id = 4;
    string course_id = 5;
}

message ListUserCourseResponse {
    repeated UserCourseResponse user_courses = 1;
    int32 total = 2;
}